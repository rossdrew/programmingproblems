package com.rox.adventofcode.y2018

import com.rox.adventofcode.infiniteSequence
import java.lang.RuntimeException

private val inputA = """
+5
-11
+17
+9
-4
-2
+11
-10
-16
+18
+18
-2
-2
+17
+13
+14
-11
+19
-14
+8
+10
-3
-12
+13
-3
+18
-20
+8
+3
+8
+13
+9
+14
-11
-6
+16
-12
+14
-8
+3
-18
-11
+6
-2
-14
-2
+17
-2
+6
-1
-13
+20
+9
+14
-15
-16
+18
-4
-8
+5
+19
-1
+19
+11
-3
+16
-12
-6
+3
-7
-1
+4
-15
-5
+13
+9
+11
+2
+17
+12
-7
-16
+13
-11
-14
+22
+16
-8
+16
+8
-10
+8
-19
+17
-9
+8
-2
+18
+9
+1
+10
-14
+6
+2
+2
-15
-15
-6
+11
+16
-8
+14
-18
-12
+14
+7
-1
-13
-18
-13
+5
-3
-18
+7
-2
-2
+6
-12
+15
+1
+18
-8
+22
+6
-1
+9
+9
+17
+18
+9
+13
-8
-17
+16
+16
+12
-11
-6
-9
+13
+11
-8
-12
+8
-10
+17
-13
-17
+7
-10
-3
+4
+1
-11
+3
-6
+19
+4
+13
+1
+11
+6
-3
+16
+8
+1
+17
-10
+18
-3
-7
+20
+4
+1
-8
+1
-2
+12
-1
+8
+8
+18
-10
+6
-16
+1
-3
+10
-11
-1
-5
+15
-11
-10
+18
+4
+8
+14
+6
+16
+12
+2
-19
+18
-5
-16
-10
-7
-3
+13
+14
+16
+13
-12
+15
+8
+17
+10
+7
+6
+17
+19
+19
-16
+10
+4
-16
-14
+8
+7
-22
-8
-19
+13
+12
-18
-21
+10
-12
-2
-12
-11
-16
-20
+6
-3
+2
-16
+9
-13
+1
+2
-13
+15
+9
-7
+22
-2
+18
+5
+4
-20
+14
-17
-19
+16
-6
+19
+1
+5
+24
+11
-16
+15
+13
+15
-3
-5
-17
-1
+8
+5
-10
+9
-2
+7
-11
-17
-13
-1
-9
+4
-10
-26
-22
+16
+14
+21
-20
+43
+8
-12
+2
-7
+15
+12
+17
+12
-18
+16
-12
+13
+8
+14
-12
+26
-6
+18
-3
-7
+19
-5
+13
+12
-14
-7
-14
+13
+13
-18
-6
+3
-12
+5
-20
+19
-11
-7
-15
-11
+12
-14
+24
-1
+18
+24
-9
+11
+9
-3
+8
-21
+1
+17
+1
+4
+20
-12
-5
+23
-9
+6
-12
-36
+13
-3
+33
-2
+9
+11
+23
-18
+22
-11
+14
+9
+8
-12
+5
-3
-3
+8
+16
+6
-18
+10
-18
-6
-1
-2
+24
-17
+23
+16
-9
+10
+23
-10
+2
+2
-9
+13
+3
+18
+12
+15
+16
-3
-7
-7
-5
+9
+1
-3
-19
-7
+17
+3
+13
+25
-4
-1
-19
-7
+15
-21
+43
+17
+5
+19
+10
+14
-15
-12
+19
+19
-16
-7
-7
-15
+6
-8
+18
+12
-7
-18
+9
+18
+16
-23
-18
-3
+12
-15
+9
+3
-14
+16
+18
+13
+19
-1
+11
+14
-4
-16
+11
-12
+27
-1
-13
+9
+7
-9
-1
+14
-35
-28
+1
+4
+15
-18
+10
-6
+12
-2
-5
-23
+31
-23
-37
+6
-13
-3
+4
+38
-23
-28
-24
-15
+4
+3
-16
+32
+13
-24
-9
-41
-41
-13
-41
-17
+16
-3
-36
-136
-9
+7
-4
-54
+20
+3
+11
+13
+16
+6
+6
-29
-118
-68
-416
-393
-73804
+17
+8
-14
+12
-22
-19
-7
-3
-14
+8
-3
-3
+16
-14
+5
-19
+16
+15
+8
+11
-14
-13
+3
+14
-15
+19
+26
+8
-11
-12
+17
-12
-12
+20
+22
+13
+14
+13
-3
-2
-1
-4
-16
+7
+12
+18
-15
-11
+7
-15
+11
+16
+13
+16
-2
-9
-4
+6
-8
-27
+16
-7
+87
+17
+11
-12
-2
+11
-13
-9
-10
-21
+15
-23
-15
+13
+11
+37
+16
+22
+16
+12
+18
-9
-8
+19
-5
-4
+13
+8
+4
-9
+4
+9
+4
-19
-2
-11
-2
+16
+17
+6
-8
+19
-2
+6
+2
-10
+12
+6
-20
-6
+5
+14
+12
+20
-21
+22
-2
+9
-2
-14
-15
+14
+7
-2
+9
-19
-52
-20
+4
-1
-18
+9
+7
-17
-22
-20
-7
-2
-9
+8
-3
+11
+18
-7
+17
+22
-18
-15
-19
-8
+13
+3
-15
+17
-3
-43
-34
+9
-37
+41
+141
-16
+19
-10
+14
+4
-7
-17
+12
+23
+2
+16
+36
-61
-253
-41
-44
-17
+10
-9
-5
+15
+20
+16
-4
+3
-12
+21
-11
-9
+16
-24
-12
+5
-2
-6
-18
-15
+16
-10
-5
-4
+8
+6
-20
-3
-19
+7
+4
-3
-11
+20
+4
+17
-3
-5
-3
+6
-4
-16
-15
+3
+19
-18
+16
-9
+17
+15
-25
-12
-17
-17
-4
+13
-15
+4
+17
-7
+13
-18
+4
+3
+10
+5
-1
+12
+9
-19
+16
+2
-11
-14
-14
-14
-2
+6
-3
+1
-15
+3
+2
-11
-9
+4
-3
+13
-1
-20
-19
-13
-8
-1
+13
+8
+9
+2
+6
+8
-9
-20
-5
+11
+20
+2
+9
+15
+17
+3
+18
-20
-3
+7
+8
+15
-6
-10
-16
+19
+2
-32
-7
-11
+3
+11
-25
-11
+16
-3
+16
-35
+10
+16
+24
-3
+1
-15
-8
+20
+27
+23
+20
-1
-14
+34
+14
+3
-18
+6
+10
+9
-18
-27
-42
-41
-37
-12
-22
+15
+12
-19
-18
+17
-15
+18
-4
+20
-12
+17
-34
-23
-8
-27
-4
-8
+20
-10
-8
-19
+8
-4
+11
-1
-11
+9
+1
-4
+15
-6
+3
-10
-10
-4
+5
+28
-2
+15
-21
+19
-1
-6
-8
+13
-44
+3
-9
+3
-24
-19
+17
-3
+7
-16
+11
+17
-27
-15
-2
-11
-18
+9
-6
-17
+2
-16
+13
+16
-9
+1
-13
-5
-11
+4
-2
+8
+3
+25
+15
-20
+7
+2
+5
-3
-13
-17
-5
-6
+4
+20
+22
+8
+18
-7
+4
+13
-1
-6
-14
-4
-5
-25
+21
-5
-20
+15
+20
+1
+1
+3
+5
+3
+75248
""".trimIndent()

fun main(args: Array<String>) {
    println("Part A: ${solutionA(inputA)}")
    println("Part B: ${solutionB(inputA)}")
}

/**
--- Day 1: Chronal Calibration ---
 * "We've detected some temporal anomalies," one of Santa's Elves at the Temporal Anomaly Research and Detection
 * Instrument Station tells you. She sounded pretty worried when she called you down here. "At 500-year intervals into
 * the past, someone has been changing Santa's history!"
 *
 * "The good news is that the changes won't propagate to our time stream for another 25 days, and we have a device" - she
 * attaches something to your wrist - "that will let you fix the changes with no such propagation delay. It's configured
 * to send you 500 years further into the past every few days; that was the best we could do on such short notice."
 *
 * "The bad news is that we are detecting roughly fifty anomalies throughout time; the device will indicate fixed
 * anomalies with stars. The other bad news is that we only have one device and you're the best person for the job!
 * Good lu--" She taps a button on the device and you suddenly feel like you're falling. To save Christmas, you need to
 * get all fifty stars by December 25th.
 *
 * Collect stars by solving puzzles. Two puzzles will be made available on each day in the advent calendar; the second
 * puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!
 *
 * After feeling like you've been falling for a few minutes, you look at the device's tiny screen. "Error: Device must be
 * calibrated before first use. Frequency drift detected. Cannot maintain destination lock." Below the message, the
 * device shows a sequence of changes in frequency (your puzzle input). A value like +6 means the current frequency
 * increases by 6; a value like -3 means the current frequency decreases by 3.
 *
 * For example, if the device displays frequency changes of +1, -2, +3, +1, then starting from a frequency of zero, the
 * following changes would occur:
 *
 * Current frequency  0, change of +1; resulting frequency  1.
 * Current frequency  1, change of -2; resulting frequency -1.
 * Current frequency -1, change of +3; resulting frequency  2.
 * Current frequency  2, change of +1; resulting frequency  3.
 * In this example, the resulting frequency is 3.
 *
 * Here are other example situations:
 *
 * +1, +1, +1 results in  3
 * +1, +1, -2 results in  0
 * -1, -2, -3 results in -6
 * Starting with a frequency of zero, what is the resulting frequency after all of the changes in frequency have been
 * applied?
 *
 * Answer: 543
 */
private fun solutionA(input : String) : Any {
    val deltas = input.split('\n').map { it.toInt() }
    return deltas.sum()
}

/**
 * --- Part Two ---
 * You notice that the device repeats the same frequency change list over and over. To calibrate the device, you need to
 * find the first frequency it reaches twice.
 *
 * For example, using the same list of changes above, the device would loop as follows:
 *
 * Current frequency  0, change of +1; resulting frequency  1.
 * Current frequency  1, change of -2; resulting frequency -1.
 * Current frequency -1, change of +3; resulting frequency  2.
 * Current frequency  2, change of +1; resulting frequency  3.
 * (At this point, the device continues from the start of the list.)
 * Current frequency  3, change of +1; resulting frequency  4.
 * Current frequency  4, change of -2; resulting frequency  2, which has already been seen.
 *
 * In this example, the first frequency reached twice is 2. Note that your device might need to repeat its list of
 * frequency changes many times before a duplicate frequency is found, and that duplicates might be found while in the
 * middle of processing the list.
 *
 * Here are other examples:
 *
 * +1, -1 first reaches 0 twice.
 * +3, +3, +4, -2, -4 first reaches 10 twice.
 * -6, +3, +8, +5, -6 first reaches 5 twice.
 * +7, +7, -2, -7, -4 first reaches 14 twice.
 *
 * What is the first frequency your device reaches twice?
 *
 * Answer: 621
 */
private fun solutionB(input : String) : Any {
    val deltas = input.split('\n').map { it.toInt() }
    var frequency = 0
    val frequencyHistory = mutableSetOf(0)

    deltas.infiniteSequence().forEach { delta ->
        frequency+=delta
        if (frequencyHistory.contains(frequency))
            return frequency
        frequencyHistory.add(frequency)
    }

    throw RuntimeException("Non repeating frequency")
}